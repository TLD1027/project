r
ni
vmmap
ni
vmmap
ni
vmmap
maps
map
mmap
vmmap
ni
vmmap
ni
ni
ni
ni
ni
heap
bin
ni
bin
heap
bin
ni
bin
ni
ni
ni
heap
x/40gx 0x558d53b53000
ni
heap
x/30gx 0x558d53b53000
bin
ni
bin
ni
bin
heap
x/30gx 0x558d53b53320
x/30gx 0x558d53b53000
bin
ni
heap
ni
heapp
heap
bin
ni
heap
bin
ni
heap
x/30gx 0x558d53b53000
ni
ni
heap
x/30gx 0x560702563000
bi
ni
ni
x/30gx 0x7ffef0d5f7c0
ni
heap
x/30gx 0x56344350d290
heap
ni
heap
bi
bin
ni
heap
bin
ni
heap
bin
ni
ni
heap
bin
ni
ni
heap
bin
ni
heap
bin
x/60gx 0x56344350d290
heap
ni
ni
x/50gx gcc tcache_unlink.c -o tcache_unlink -g
x/50gx 0x7ffd948cca60
ni
heap
bin
x/30gx 0x558c2e1163d0
ni
ni
heap
bi
ni
bin
ni
heap
heap
bin
file tcache
quit
b main
r
heap
ni
heap
ni
heap
heap
bin
ni
heap
bin
ni
heap
ni
heap
ni
heap
ni
heap
bin
ni
heap
bin
x/40gx 0x#  本文作者： Loτυs @清風微醺
#  本文链接： https://www.wdqjxtmph.top/2021/10/24/堆学习笔记-chunk overlapping/
# 版权声明： 本站所有文章除特别声明外，均采用 (CC)BY-NC-SA 许可协议。转载请注明出处！
：ptmalloc 通过 chunk header 里面的 prev_size 和 size 来对前后堆块进行定位。
②：ptmalloc 通过查看下一个堆的 prev_inuse 值来判断该 chunk 是否被使用。（不能通过 prev_size 来判断，因为虽然 **” 该 chunk 为空时，下一个堆块的 pre_size 会记录该 chunk 的大小。“** 但是不能判断 pre_size 里记录的数据到底是上一个 chunk 的 size 还是上一个 chunk 的末尾数据）
因此我们如果能控制 chunk header 里面的数据，就可以导致 chunk overlapping，可以控制 chunk 里面的内容，如果可以控制的 chunk 内容范围里存在指针等，就可
x/40gx 0x4078
vmmap
x/40gx 0x5562f5b5c078
heap
heap
heap
heap
heap
x/40gx 0x5595cb280290
heap
heap
heap
x/40gx 0x55c53572a290
heap
x/30gx v0x562c347d0290
x/30gx 0x562c347d0290
heap
x/40gx 0x559c081ce290
heap
x/40gx 0x55cb7b526290
heap
x/40gx 0x55b19a2e4290
heap
x/40gx 0x5651094e3290
heap
x/40gx 0x559e91045290
heap
x/30gx 0x5648f86bb290
heap
x/40gx 0x561da4825290
heap
x/40gx 0x55669828a290
heap
x/30gx 0x55cbbf1e2290
heap
x/40gx 0x55bcb9d6a290
heap
x/30gx 0x55c946bd7290
heap
x/40gx 0x560c7fe0d290
heap
x/40gx 0x55e8341fb290
heap
x/40gx 0x564ae8937290
heap
x/40gx 0x56020486a290
heap
x/40gx 0x55baf84f3290
heap
x/40gx 0x555c45fbd290
heap
x/40gx 0x557e45d79290
heap
x/40gx 0x55b2e56a2290
x/40gx 0x55b2e56a2290
heap
x/40gx 0x55a751e53290
heap
bin
bi
heap
x/40gx 0x557823a6c290
heap
x/40gx 0x55ec6f765290
heap
heap
x/30gx 0x55fe7e24b290
heap
x/40gx 0x5654957d0290
heap
x/40gx 0x55a207e10290
heap
x/40gx 0x560526720290
heap
heap
x/40gx 0x55f2cd87f290
heap
x/30gx 0x55e4cb5b0290
heap
x/40gx 0x56383b53d290
heap
x/40gx 0x556d9c91e290
heap
heap
x/30gx 0x564e995da290
heap
x/30gx 0x560ce10b4290
heap
x/40gx 0x560ef7e53290
heap
x/40gx 0x55e72cbc7290
stack 40
heap
bss
vmmap
x/40gx 0x55e72ad060a0
heap
x/30gx 0x55d39e6bd290
heap
stack 40
vmmap
x/40gx 0x7ff0c94e60a0
x/40gx 0x5638fa0e90a0
heap
heap
heap
vmmap
x/40gx 0x561d9f9790a0
heap
x/40gx 0x555f77111330
heap
x/40gx 0x560c5f169330
heap
x/30gx 0x55e1808a1310
heap
x/30gx 0x5565bec6c310
